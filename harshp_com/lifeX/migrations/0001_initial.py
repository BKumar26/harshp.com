# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-03-26 10:53
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sitebase', '0003_auto_20160214_2024'),
    ]

    operations = [
        migrations.CreateModel(
            name='LifeXBlog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=128)),
                ('date_created', models.DateTimeField()),
                ('date_published', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(db_index=True, default=False, verbose_name='published')),
                ('short_description', models.CharField(max_length=150)),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('body_type', models.CharField(choices=[('default', 'textarea'), ('html', 'html'), ('markdown', 'markdown')], default='markdown', max_length=8)),
                ('body_text', models.TextField(blank=True)),
                ('body', models.TextField()),
                ('authors', models.ManyToManyField(to='sitebase.Author')),
                ('tags', models.ManyToManyField(to='sitebase.Tag')),
            ],
            options={
                'verbose_name': 'LifeX Blog Post',
                'verbose_name_plural': 'LifeX Blog Posts',
            },
        ),
        migrations.CreateModel(
            name='LifeXCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('short_description', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=150, unique=True)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'LifeX Idea Category',
                'verbose_name_plural': 'LifeX Idea Categories',
            },
        ),
        migrations.CreateModel(
            name='LifeXExperiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=128)),
                ('date_created', models.DateTimeField()),
                ('date_published', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(db_index=True, default=False, verbose_name='published')),
                ('short_description', models.CharField(max_length=150)),
                ('slug', models.SlugField(blank=True, max_length=150, unique=True)),
                ('rating', models.IntegerField(choices=[(5, 'SCORE-5'), (4, 'SCORE-4'), (3, 'SCORE-3'), (2, 'SCORE-2'), (1, 'SCORE-1'), (0, 'SCORE-0')], default=(0, 'SCORE-0'))),
                ('body_type', models.CharField(choices=[('default', 'textarea'), ('html', 'html'), ('markdown', 'markdown')], default='markdown', max_length=8)),
                ('premise', models.TextField()),
                ('premise_body', models.TextField(blank=True)),
                ('outcome', models.TextField(blank=True, null=True)),
                ('outcome_body', models.TextField(blank=True, null=True)),
                ('authors', models.ManyToManyField(to='sitebase.Author')),
            ],
            options={
                'verbose_name': 'LifeX Experiment',
                'verbose_name_plural': 'LifeX Experiments',
            },
        ),
        migrations.CreateModel(
            name='LifeXIdea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('short_description', models.CharField(max_length=150)),
                ('body_type', models.CharField(choices=[('default', 'textarea'), ('html', 'html'), ('markdown', 'markdown')], default='markdown', max_length=8)),
                ('description', models.TextField(blank=True, null=True)),
                ('body_text', models.TextField(blank=True)),
                ('slug', models.SlugField(max_length=150, unique=True)),
                ('tried', models.BooleanField(default=False)),
                ('retry', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ideas', to='lifeX.LifeXCategory')),
                ('tags', models.ManyToManyField(to='sitebase.Tag')),
            ],
            options={
                'verbose_name': 'LifeX Idea',
                'verbose_name_plural': 'LifeX Ideas',
            },
        ),
        migrations.CreateModel(
            name='LifeXWeek',
            fields=[
                ('number', models.AutoField(db_index=True, primary_key=True, serialize=False, verbose_name='week#')),
                ('date_start', models.DateField(blank=True)),
                ('date_end', models.DateField(blank=True)),
            ],
            options={
                'get_latest_by': 'number',
                'ordering': ['number'],
                'verbose_name': 'LifeX Week',
                'verbose_name_plural': 'LifeX Weeks',
            },
        ),
        migrations.AddField(
            model_name='lifexexperiment',
            name='idea',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to='lifeX.LifeXIdea'),
        ),
        migrations.AddField(
            model_name='lifexexperiment',
            name='tags',
            field=models.ManyToManyField(to='sitebase.Tag'),
        ),
        migrations.AddField(
            model_name='lifexexperiment',
            name='week',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to='lifeX.LifeXWeek'),
        ),
    ]
